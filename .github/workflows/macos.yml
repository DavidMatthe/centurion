name: "CI: macOS"

on: [ push ]

env:
  VCPKG_ROOT: ${{github.workspace}}/vcpkg
  VCPKG_DEFAULT_BINARY_CACHE: ${{github.workspace}}/vcpkg/bincache

jobs:
  macos-test:
    runs-on: macos-latest
    if: contains(github.event.head_commit.message, '[skip-ci]') == false
    strategy:
      fail-fast: false
      matrix:
        CPP_VERSION: [ 17, 20, 23 ]
    steps:
      - uses: actions/checkout@v3

      - name: Install system dependencies
        run: |
          brew update
          brew upgrade
          brew install cmake
          brew install ninja
          brew install glfw
          brew install sdl2
          brew install sdl2_image
          brew install sdl2_mixer
          brew install sdl2_ttf

      - name: Restore Vcpkg
        id: restore-vcpkg-and-artifacts
        uses: actions/cache@v3
        with:
          path: |
            ${{env.VCPKG_ROOT}}
            !${{env.VCPKG_ROOT}}/buildtrees
            !${{env.VCPKG_ROOT}}/packages
            !${{env.VCPKG_ROOT}}/downloads
            !${{env.VCPKG_ROOT}}/installed
          key: centurion-macos-vcpkg-${{hashFiles('vcpkg.json')}}

      - name: Install Vcpkg
        if: steps.restore-vcpkg-and-artifacts.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/microsoft/vcpkg
          ./vcpkg/bootstrap-vcpkg.sh -disableMetrics
          sudo ./vcpkg/vcpkg integrate install

      - name: Create Vcpkg binary cache directory
        if: steps.restore-vcpkg-and-artifacts.outputs.cache-hit != 'true'
        run: mkdir ${{env.VCPKG_DEFAULT_BINARY_CACHE}}

      - name: Generate build files
        run: |
          mkdir build && cd build
          cmake .. -GNinja \
                   -DCMAKE_BUILD_TYPE=Debug \
                   -DCMAKE_CXX_STANDARD=${{matrix.CPP_VERSION}} \
                   -DBUILD_TESTS=ON \
                   -DBUILD_EXAMPLES=ON

      - name: Build
        run: ninja -C build

      - name: Run unit tests
        working-directory: ./build/test/unit-tests
        run: ./testcenturion

      - name: Run mocked tests
        working-directory: ./build/test/mocked-tests
        run: ./mockcenturion
